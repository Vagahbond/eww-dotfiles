(defpoll song_artist :interval "4s" "playerctl -p spotify metadata xesam:artist")
(defpoll song_name :interval "4s" "playerctl -p spotify metadata xesam:title")
(deflisten state "playerctl -p spotify status -F")
(defpoll cover_art :interval "3s" "./bar/bottom/music/art_management.sh")
(defpoll position_percentage :initial 0 :interval "3s" "zsh ./bar/bottom/music/current_position.sh")
(defpoll is_spotify_open :initial false :interval "3s" "if [[ -n $(playerctl -l  | grep -o spotify ) ]]; then echo 'true'; else echo 'false'; fi")
(deflisten shuffling "playerctl shuffle -F")
(defvar show_controls false)
; (defpoll song_name :interval "2s"  "~/.config/eww/bar/scripts/music_info --status")
; TODO: Replace initial with shuffle button

(defwidget music []
  (expander
    :expanded is_spotify_open

    (eventbox
      :onhover "eww update show_controls=true -c ."
      :onhoverlost "eww update show_controls=false -c ."
      
      (box :class "music-box"
        :orientation "V"
        :space-evenly false
        
        (circular-progress
          :tooltip "${song_artist} - ${song_name}"
          :value 100
          :height 33
          :thickness 2
          :clockwise true
          :class "music"
          
          (box
            :class "song-cover-art"
            :vexpand "false"
            :hexpand "false"
            :style "background-image: url('${cover_art}');"
          )
        )
        
        (revealer
          :transition "slideup"
          :reveal show_controls
          
          (box
            :orientation "v"
            
            (box
              :class "upper-section"
              :orientation "H"
              
              (button
                :onclick "playerctl -p spotify shuffle toggle"
                :class "shuffle"
                "${shuffling == "On" ? "󰒞" : "󰒟"}"
              )
              
              (button
                :onclick "playerctl -p spotify play-pause"
                :class "play-pause"
                "${state == "Playing" ? "" : ""}"
              )
            )
            
            (box
              :class "next-previous"
              :orientation "H"
              
              (button
                :class "previous"
                :onclick "playerctl -p spotify previous"
                "󰒮"
              )
              
              (button
                :onclick "playerctl -p spotify next"
                :class "next"
                "󰒭"
              )
            )
          )
        )
        
        (progress
          :class "progress"
          :value position_percentage
          :flipped false
          :orientation "h"
        )
      )
    )
  )
)

